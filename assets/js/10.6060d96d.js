(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{126:function(t,a,e){var n=e(64).f,r=Function.prototype,s=/^\s*function ([^ (]*)/;"name"in r||e(20)&&n(r,"name",{configurable:!0,get:function(){try{return(""+this).match(s)[1]}catch(t){return""}}})},196:function(t,a,e){"use strict";e.r(a);e(126);var n={name:"MemberDetails",props:["account","token"],data:function(){return{makingTransaction:!1,stakeAmount:"",unstakeAmount:"",trx:{hash:"",link:""}}},computed:{dapp:{get:function(){return this.$store.getters.dapp}}},methods:{stake:function(){var t=this;this.$validator.validate("stakeAmount").then((function(a){if(a){if(!t.dapp.metamask.installed)return void alert("Please verify that you have MetaMask installed and unlocked.");if(t.dapp.metamask.netId!==t.dapp.network.current.id)return void alert("You are on the wrong Network. Please switch MetaMask on ".concat(t.dapp.network.current.name,"."));try{t.makingTransaction=!0,t.dapp.instances.token.transferAndCall(t.dapp.instances.dao.address,t.dapp.web3.toWei(t.stakeAmount),{from:t.dapp.metamask.address,to:t.token.address},(function(a,e){a?alert("Some error occurred. Maybe you rejected the transaction or you have MetaMask locked!"):(t.trx.hash=e,t.trx.link=t.dapp.network.current.etherscanLink+"/tx/"+t.trx.hash),t.makingTransaction=!1}))}catch(t){console.log(t),alert("Cannot connect. Please verify that you have MetaMask installed and unlocked.")}}})).catch((function(a){console.log(a),t.makingTransaction=!1,alert("Some error occurred.")}))},unstake:function(){var t=this;this.$validator.validate("unstakeAmount").then((function(a){if(a){if(!t.dapp.metamask.installed)return void alert("Please verify that you have MetaMask installed and unlocked.");if(t.dapp.metamask.netId!==t.dapp.network.current.id)return void alert("You are on the wrong Network. Please switch MetaMask on ".concat(t.dapp.network.current.name,"."));try{t.makingTransaction=!0,t.dapp.instances.dao.unstake(t.dapp.web3.toWei(t.unstakeAmount),{from:t.dapp.metamask.address,to:t.dapp.instances.dao.address},(function(a,e){a?alert("Some error occurred. Maybe you rejected the transaction or you have MetaMask locked!"):(t.trx.hash=e,t.trx.link=t.dapp.network.current.etherscanLink+"/tx/"+t.trx.hash),t.makingTransaction=!1}))}catch(t){console.log(t),alert("Cannot connect. Please verify that you have MetaMask installed and unlocked.")}}})).catch((function(a){console.log(a),t.makingTransaction=!1,alert("Some error occurred.")}))}}},r=e(11),s=Object(r.a)(n,(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("b-row",[t.trx.hash?e("b-col",{staticClass:"mb-2",attrs:{md:"12"}},[e("b-alert",{staticClass:"mt-3",attrs:{show:"",variant:"success"}},[t._v("\n            Last transaction:\n            "),e("b-link",{attrs:{href:t.trx.link,target:"_blank"}},[t._v(t._s(t.trx.hash))])],1)],1):t._e(),t._v(" "),e("b-col",{staticClass:"mb-4",attrs:{md:"8"}},[e("b-card",{staticClass:"text-center",attrs:{"no-body":""}},[e("b-card-body",[e("ui--member-image",{attrs:{member:t.account.member}})],1)],1)],1),t._v(" "),e("b-col",{staticClass:"mb-4",attrs:{md:"4"}},[e("b-card",{attrs:{"no-body":""}},[e("b-card-header",[t._v("\n                Member #"+t._s(t.account.member.id)+"\n\n                "),e("div",{staticClass:"float-right"},[t.account.member.approved?e("b-badge",{directives:[{name:"b-tooltip",rawName:"v-b-tooltip.hover",modifiers:{hover:!0}}],staticClass:"p-1",attrs:{title:"Verified",variant:"success",pill:""}},[e("font-awesome-icon",{attrs:{icon:"check-circle"}})],1):t._e()],1)]),t._v(" "),e("b-list-group",{attrs:{flush:""}},[e("b-list-group-item",[t._v("\n                    Address:\n                    "),e("b-link",{attrs:{href:t.dapp.network.current.etherscanLink+"/address/"+t.account.member.address,target:"_blank"}},[t._v("\n                        "+t._s(t._f("truncate")(t.account.member.address,10))+"\n                    ")])],1),t._v(" "),e("b-list-group-item",[t._v("\n                    Balance: "),e("b",[t._v(t._s(t.account.tokenBalance)+" "+t._s(t.token.symbol))])]),t._v(" "),e("b-list-group-item",[t._v("\n                    Staked: "),e("b",[t._v(t._s(t.account.member.stakedTokens)+" "+t._s(t.token.symbol))])]),t._v(" "),e("b-list-group-item",[t._v("\n                    Used: "),e("b",[t._v(t._s(t.account.member.usedTokens)+" "+t._s(t.token.symbol))])])],1),t._v(" "),e("b-card-footer",[e("small",[t._v("Since: "+t._s(t._f("formatLocaleDate")(t.account.member.creationDate)))])])],1),t._v(" "),t.account.member.address===t.dapp.metamask.address?e("b-card",{staticClass:"mt-4",attrs:{header:"Stake "+t.token.symbol}},[e("b-form",{on:{submit:function(a){return a.preventDefault(),t.stake(a)}}},[e("b-input-group",[e("b-form-input",{directives:[{name:"validate",rawName:"v-validate",value:{required:!0,numeric:!0,min_value:1,max_value:t.account.tokenBalance},expression:"{ required: true, numeric: true, min_value: 1, max_value: account.tokenBalance }"}],class:{"is-invalid":t.errors.has("stakeAmount")},attrs:{id:"stakeAmount",name:"stakeAmount",disabled:t.makingTransaction,"data-vv-as":"stake amount"},model:{value:t.stakeAmount,callback:function(a){t.stakeAmount="string"==typeof a?a.trim():a},expression:"stakeAmount"}}),t._v(" "),e("b-input-group-append",[e("b-button",{attrs:{disabled:t.makingTransaction,type:"submit",variant:"primary"}},[t._v("Stake")])],1)],1),t._v(" "),e("small",{directives:[{name:"show",rawName:"v-show",value:t.errors.has("stakeAmount"),expression:"errors.has('stakeAmount')"}],staticClass:"text-danger"},[t._v("\n                    "+t._s(t.errors.first("stakeAmount"))+"\n                ")])],1)],1):t._e(),t._v(" "),t.account.member.address===t.dapp.metamask.address?e("b-card",{staticClass:"mt-4",attrs:{header:"Unstake "+t.token.symbol}},[e("b-form",{on:{submit:function(a){return a.preventDefault(),t.unstake(a)}}},[e("b-input-group",[e("b-form-input",{directives:[{name:"validate",rawName:"v-validate",value:{required:!0,numeric:!0,min_value:1,max_value:t.account.member.stakedTokens},expression:"{ required: true, numeric: true, min_value: 1, max_value: account.member.stakedTokens }"}],class:{"is-invalid":t.errors.has("unstakeAmount")},attrs:{id:"unstakeAmount",name:"unstakeAmount",disabled:t.makingTransaction,"data-vv-as":"unstake amount"},model:{value:t.unstakeAmount,callback:function(a){t.unstakeAmount="string"==typeof a?a.trim():a},expression:"unstakeAmount"}}),t._v(" "),e("b-input-group-append",[e("b-button",{attrs:{disabled:t.makingTransaction,type:"submit",variant:"primary"}},[t._v("Unstake")])],1)],1),t._v(" "),e("small",{directives:[{name:"show",rawName:"v-show",value:t.errors.has("unstakeAmount"),expression:"errors.has('unstakeAmount')"}],staticClass:"text-danger"},[t._v("\n                    "+t._s(t.errors.first("unstakeAmount"))+"\n                ")])],1)],1):t._e()],1)],1)}),[],!1,null,null,null);a.default=s.exports}}]);